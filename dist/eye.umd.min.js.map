{"version":3,"file":"eye.umd.min.js","sources":["../src/eye.js"],"sourcesContent":["/**\r\n * @typedef {Object} AttrMap\r\n * @property {HTMLDivElement} parent - append newly created element to a parent\r\n * @property {Array<String>|String} class - class or array of classes to set\r\n * @property {String} id - set element ID\r\n * @property {Object} data - dataset values to set\r\n * @property {String} text - set element text\r\n * @property {String} html - set element html\r\n */\r\n\r\n/**\r\n * Returns the associated class event of that event\r\n * example: for click event it returns new MouseEvent(\"click\")\r\n * @param {string} ev \r\n */\r\nfunction getEvent(type, options = {}) {\r\n  switch (type) {\r\n    // Mouse Events\r\n    case 'click':\r\n    case 'dblclick':\r\n    case 'mousedown':\r\n    case 'mouseup':\r\n    case 'mousemove':\r\n    case 'mouseenter':\r\n    case 'mouseleave':\r\n    case 'mouseover':\r\n    case 'mouseout':\r\n      return new MouseEvent(type, options);\r\n\r\n    // Pointer Events\r\n    case 'pointerdown':\r\n    case 'pointerup':\r\n    case 'pointermove':\r\n    case 'pointerenter':\r\n    case 'pointerleave':\r\n    case 'pointerover':\r\n    case 'pointerout':\r\n      return new PointerEvent(type, options);\r\n\r\n    // Keyboard Events\r\n    case 'keydown':\r\n    case 'keyup':\r\n    case 'keypress':\r\n      return new KeyboardEvent(type, options);\r\n\r\n    // Focus Events\r\n    case 'focus':\r\n    case 'blur':\r\n    case 'focusin':\r\n    case 'focusout':\r\n      return new FocusEvent(type, options);\r\n\r\n    // Input & Form Events\r\n    case 'input':\r\n    case 'change':\r\n    case 'submit':\r\n    case 'reset':\r\n      return new Event(type, options);\r\n\r\n    // Wheel\r\n    case 'wheel':\r\n      return new WheelEvent(type, options);\r\n\r\n    // Clipboard\r\n    case 'copy':\r\n    case 'cut':\r\n    case 'paste':\r\n      return new ClipboardEvent(type, options);\r\n\r\n    // UI\r\n    case 'scroll':\r\n    case 'resize':\r\n      return new UIEvent(type, options);\r\n\r\n    // Default: fallback to generic Event\r\n    default:\r\n      return new CustomEvent(type, options);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {EyeElement & {\r\n *  refresh: (attrs: AttrMap) => ModelEyeElement\r\n * }} ModelEyeElement eye element definition for model elements\r\n */\r\n\r\nconst events = [\r\n  // Mouse Events\r\n  \"click\",\r\n  \"dblclick\",\r\n  \"mousedown\",\r\n  \"mouseup\",\r\n  \"mousemove\",\r\n  \"mouseenter\",\r\n  \"mouseleave\",\r\n  \"mouseover\",\r\n  \"mouseout\",\r\n  \"contextmenu\",\r\n\r\n  // Keyboard Events\r\n  \"keydown\",\r\n  \"keypress\", // Deprecated\r\n  \"keyup\",\r\n\r\n  // Focus Events\r\n  \"focus\",\r\n  \"blur\",\r\n  \"focusin\",\r\n  \"focusout\",\r\n\r\n  // Form Events\r\n  \"submit\",\r\n  \"change\",\r\n  \"input\",\r\n  \"reset\",\r\n  \"select\",\r\n\r\n  // Touch Events (for mobile)\r\n  \"touchstart\",\r\n  \"touchend\",\r\n  \"touchmove\",\r\n  \"touchcancel\",\r\n\r\n  // Pointer Events\r\n  \"pointerdown\",\r\n  \"pointerup\",\r\n  \"pointermove\",\r\n  \"pointerenter\",\r\n  \"pointerleave\",\r\n  \"pointercancel\",\r\n\r\n  // Drag and Drop Events\r\n  \"dragstart\",\r\n  \"dragend\",\r\n  \"dragenter\",\r\n  \"dragover\",\r\n  \"dragleave\",\r\n  \"drop\",\r\n\r\n  // Window/Document Events\r\n  \"resize\",\r\n  \"scroll\",\r\n  \"load\",\r\n  \"beforeunload\",\r\n  \"unload\",\r\n\r\n  // Media Events\r\n  \"play\",\r\n  \"pause\",\r\n  \"ended\",\r\n  \"volumechange\",\r\n  \"timeupdate\",\r\n\r\n  // Clipboard Events\r\n  \"copy\",\r\n  \"cut\",\r\n  \"paste\",\r\n\r\n  // Animation and Transition Events\r\n  \"animationstart\",\r\n  \"animationend\",\r\n  \"animationiteration\",\r\n  \"transitionstart\",\r\n  \"transitionend\",\r\n\r\n  // Mutation Events\r\n  \"DOMSubtreeModified\",\r\n  \"DOMNodeInserted\",\r\n  \"DOMNodeRemoved\",\r\n\r\n  // Other Events\r\n  \"error\",\r\n  \"hashchange\",\r\n  \"popstate\",\r\n];\r\n\r\nconst htmlElements = [\r\n  // Metadata\r\n  \"<base>\",\r\n  \"<head>\",\r\n  \"<link>\",\r\n  \"<meta>\",\r\n  \"<style>\",\r\n  \"<title>\",\r\n\r\n  // Sections\r\n  \"<body>\",\r\n  \"<address>\",\r\n  \"<article>\",\r\n  \"<aside>\",\r\n  \"<footer>\",\r\n  \"<header>\",\r\n  \"<h1>\",\r\n  \"<h2>\",\r\n  \"<h3>\",\r\n  \"<h4>\",\r\n  \"<h5>\",\r\n  \"<h6>\",\r\n  \"<main>\",\r\n  \"<nav>\",\r\n  \"<section>\",\r\n\r\n  // Text content\r\n  \"<blockquote>\",\r\n  \"<dd>\",\r\n  \"<div>\",\r\n  \"<dl>\",\r\n  \"<dt>\",\r\n  \"<figcaption>\",\r\n  \"<figure>\",\r\n  \"<hr>\",\r\n  \"<li>\",\r\n  \"<ol>\",\r\n  \"<p>\",\r\n  \"<pre>\",\r\n  \"<ul>\",\r\n\r\n  // Inline text semantics\r\n  \"<a>\",\r\n  \"<abbr>\",\r\n  \"<b>\",\r\n  \"<bdi>\",\r\n  \"<bdo>\",\r\n  \"<br>\",\r\n  \"<cite>\",\r\n  \"<code>\",\r\n  \"<data>\",\r\n  \"<dfn>\",\r\n  \"<em>\",\r\n  \"<i>\",\r\n  \"<kbd>\",\r\n  \"<mark>\",\r\n  \"<q>\",\r\n  \"<rp>\",\r\n  \"<rt>\",\r\n  \"<ruby>\",\r\n  \"<s>\",\r\n  \"<samp>\",\r\n  \"<small>\",\r\n  \"<span>\",\r\n  \"<strong>\",\r\n  \"<sub>\",\r\n  \"<sup>\",\r\n  \"<time>\",\r\n  \"<u>\",\r\n  \"<var>\",\r\n  \"<wbr>\",\r\n\r\n  // Image and multimedia\r\n  \"<area>\",\r\n  \"<audio>\",\r\n  \"<img>\",\r\n  \"<map>\",\r\n  \"<track>\",\r\n  \"<video>\",\r\n\r\n  // Embedded content\r\n  \"<embed>\",\r\n  \"<iframe>\",\r\n  \"<object>\",\r\n  \"<picture>\",\r\n  \"<portal>\",\r\n  \"<source>\",\r\n\r\n  // Scripting\r\n  \"<canvas>\",\r\n  \"<noscript>\",\r\n  \"<script>\",\r\n\r\n  // Demarcating edits\r\n  \"<del>\",\r\n  \"<ins>\",\r\n\r\n  // Table content\r\n  \"<caption>\",\r\n  \"<col>\",\r\n  \"<colgroup>\",\r\n  \"<table>\",\r\n  \"<tbody>\",\r\n  \"<td>\",\r\n  \"<tfoot>\",\r\n  \"<th>\",\r\n  \"<thead>\",\r\n  \"<tr>\",\r\n\r\n  // Forms\r\n  \"<button>\",\r\n  \"<datalist>\",\r\n  \"<fieldset>\",\r\n  \"<form>\",\r\n  \"<input>\",\r\n  \"<label>\",\r\n  \"<legend>\",\r\n  \"<meter>\",\r\n  \"<optgroup>\",\r\n  \"<option>\",\r\n  \"<output>\",\r\n  \"<progress>\",\r\n  \"<select>\",\r\n  \"<textarea>\",\r\n\r\n  // Interactive elements\r\n  \"<details>\",\r\n  \"<dialog>\",\r\n  \"<summary>\",\r\n\r\n  // Web components / scripting base\r\n  \"<slot>\",\r\n  \"<template>\",\r\n];\r\n\r\nfunction flat(word) {\r\n  let n = \"\";\r\n  for (let i = 0; i < word.length; i++) {\r\n    const t = word[i];\r\n    if (t === t.toUpperCase() && t !== t.toLowerCase()) n += \"-\" + t;\r\n    else n += t;\r\n  }\r\n  return n.toLowerCase();\r\n}\r\n\r\nconst localdata = new WeakMap();\r\n\r\n/**\r\n * cmcl stands for Create Model Children Layers, recursively creates model layers one by one\r\n * @param {EyeElement} parent\r\n * @param {Object} layer\r\n * @returns {Array<{name: string,set: (parent: EyeElement, value: String) =>}>}\r\n */\r\nfunction cmcl(parent, layer) {\r\n  let obj = [];\r\n  for (const key in layer) {\r\n    const subcontent = layer[key];\r\n    const [def, _set] = key.split(\":\");\r\n    const [tagName, ...cls] = def.split(\".\");\r\n    let [_set_name = null, _set_default = null] = (_set || \"\")\r\n      .split(\"-\")\r\n      .map((a) => a.trim());\r\n\r\n    let elm = e(tagName.trim(), {\r\n      class: cls,\r\n      parent,\r\n      data: _set ? { value: _set_name } : undefined,\r\n    });\r\n\r\n    if (_set && _set_name) {\r\n      obj.push({\r\n        name: _set_name,\r\n        set(parent, value) {\r\n          let elm = parent.find(`[data-value=\"${_set_name}\"]`);\r\n          elm.textContent = value ?? _set_default;\r\n        }\r\n      });\r\n    }\r\n\r\n    // recursive\r\n    if (\r\n      subcontent &&\r\n      typeof subcontent === \"object\" &&\r\n      !(subcontent instanceof Array)\r\n    )\r\n      obj = obj.concat(cmcl(elm, subcontent));\r\n  }\r\n  return obj;\r\n}\r\n\r\nlet delegationEvents = [\"click\", \"submit\", \"input\", \"change\", \"keydown\", \"keyup\", \"keypress\", \"focusin\", \"focusout\", \"mouseover\", \"mouseout\"];\r\nlet normalSetterGetter = (action, v, elm) => v;\r\n\r\n/**\r\n * Eye wrapper offers a subset of functions that ease DOM minipulation! Power of JQuery with \r\n * some a modern design and a bunch of new functions.\r\n * @author Yousef Neji\r\n */\r\nexport class EyeElement {\r\n  /**\r\n   * Raw html element\r\n   * @type {HTMLElement}\r\n   */\r\n  #raw = null;\r\n\r\n  /**\r\n   * Used to store delegated events listeners\r\n   * @type {Map<String,Set<{callback, target: string}>>}\r\n   */\r\n  #dlgListeners = new Map();\r\n\r\n  /**\r\n   * Custom way or modifier that redefine the way you set/get\r\n   * this element `textContent` or `value`:\r\n   * - access this feature from `.redefine` method.\r\n   */\r\n  #customSet = {\r\n    value: normalSetterGetter,\r\n    text: normalSetterGetter\r\n  };\r\n\r\n  /**\r\n   * Called internally to initiate the main EyeElement functionalities\r\n   * @method EyeElement#init\r\n   * @param {string|HTMLElement} selector\r\n   * @param {AttrMap} attrs\r\n   * @param {Object} css\r\n   * @returns {EyeElement}\r\n   */\r\n  constructor(selector, attrs, css) {\r\n    let _this = this;\r\n    if (selector instanceof HTMLElement) {\r\n      this.#raw = selector;\r\n    } else if (htmlElements.includes(selector)) {\r\n      // creating a new element\r\n      this.#raw = document.createElement(selector.substring(1, selector.length - 1));\r\n    } else {\r\n      // selecting\r\n      let s = selector.slice(-1) === \"!\";\r\n      this.#raw = document.querySelectorAll(s ? selector.slice(0, -1) : selector);\r\n\r\n      if (this.#raw.length == 0) return null; // we stop everything here\r\n      if (this.length == 1 || s) this.#raw = this.#raw.item(0);\r\n    }\r\n\r\n    /**\r\n     * Handler used to integrate delegation concept/algorithme\r\n     * @param {Event} e \r\n     */\r\n    function handler(e) {\r\n      let name = e.type,\r\n        listeners = _this.#dlgListeners,\r\n        _etarget = e.target,\r\n        me = this; // refers to the element being listening to the event\r\n\r\n      if (listeners.has(name)) {\r\n        let cbs = listeners.get(name);\r\n        cbs?.forEach(({ callback, target }) => {\r\n          if (_etarget.closest(target)) {\r\n            // we hitting the target\r\n            callback(e, me);\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    this.each((elm, idx) => {\r\n      let parentElm = null;\r\n      if (attrs)\r\n        for (const key in attrs) {\r\n          const value = attrs[key];\r\n          if (key == \"class\")\r\n            elm.classList.add.apply(\r\n              elm.classList,\r\n              (value instanceof Array ? value : value.split(\" \")).filter(a => a != \"\")\r\n            );\r\n          else if (key == \"text\") elm.textContent = value;\r\n          else if (key == \"html\") elm.innerHTML = value;\r\n          else if (key == \"data\") for (const k in value) elm.dataset[k] = value[k];\r\n          else if (key == \"parent\") parentElm = value;\r\n          else if (key in elm) elm[key] = value;\r\n          else if (key[0] != \"_\") elm.setAttribute(key, elm); // we must ignore _ started keys 'cause they are used by models\r\n        }\r\n      if (css)\r\n        for (const key in css)\r\n          if (key.indexOf(\"-\") != -1) elm.style[key] = css[key];\r\n          else elm.style[flat(key)] = css[key];\r\n      if (parentElm instanceof EyeElement || parentElm instanceof HTMLElement) parentElm.append(elm);\r\n\r\n      // creating the delegation handling model\r\n      delegationEvents.forEach(ev => {\r\n        elm.addEventListener(ev, handler);\r\n      })\r\n    })\r\n\r\n    // creating/initiating events functions\r\n    events.forEach(ev => {\r\n      _this[ev] = function (cb) {\r\n        if (cb) {\r\n          if (typeof cb == \"function\") _this.on(ev, cb);\r\n        } else _this.trigger(ev);\r\n\r\n        return _this;\r\n      }\r\n    })\r\n\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Length of current selection\r\n   * @type {Number}\r\n   */\r\n  get length() {\r\n    return this.#raw instanceof NodeList ? this.#raw.length : 1;\r\n  }\r\n\r\n  /**\r\n   * Raw html element\r\n   * @type {HTMLElement}\r\n   */\r\n  get raw() {\r\n    return this.#raw;\r\n  }\r\n\r\n  /**\r\n   * Run(loop) through selected NodeList, or run a single call for one single element\r\n   * @method EyeElement#each\r\n   * @param {(elm: HTMLElement, index: number, current: EyeElement)=>} cb \r\n   * @returns {EyeElement}\r\n   */\r\n  each(cb) {\r\n    let _this = this;\r\n    (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]]).forEach(([idx, elm]) => {\r\n      cb(elm, idx, this);\r\n    })\r\n    return this;\r\n  }\r\n  /**\r\n   * Set or get element html\r\n   * @method EyeElement#html\r\n   * @param {string} [html]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  html(html) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (html === undefined) return out = elm.innerHTML;// getting the first one and exiting\r\n      elm.innerHTML = html;\r\n    })\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Set or get element text\r\n   * @method EyeElement#text\r\n   * @param {string} [text]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  text(text) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (text === undefined) return out = this.#customSet.text(\"get\", elm.textContent, elm);\r\n      elm.textContent = this.#customSet.text(\"set\", text, elm);\r\n    })\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Set or get element's data values\r\n   * @method EyeElement#data\r\n   * @param {string} key\r\n   * @param {*} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  data(key, value) {\r\n    if (!localdata.has(this)) localdata.set(this, {});\r\n    if (key) {\r\n      if (value != undefined) localdata.get(this)[key] = value;\r\n      else return localdata.get(this)[key];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set or get an attribute value\r\n   * @method EyeElement#attr\r\n   * @param {string} name\r\n   * @param {*} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  attr(name, value) {\r\n    let out = \"\";\r\n    this.each((elm, idx) => {\r\n      if (name.indexOf(\"data-\") === 0) {\r\n        let [key, val] = name.split(\"-\").map((a) => a.trim());\r\n        // modify data\r\n        if (value == undefined) return out = elm.dataset[val];\r\n        elm.dataset[val] = value;\r\n      } else {\r\n        if (name in elm) {\r\n          if (value == undefined) return out = elm[name];\r\n          elm[name] = value;\r\n        } else if (name[0] != \"_\") {\r\n          if (value == undefined) return out = elm.getAttribute(name)\r\n          elm.setAttribute(name, value);\r\n        }\r\n      }\r\n    })\r\n    return out ? out : this;\r\n  }\r\n  /**\r\n   * Removing attribute of this element\r\n   * @type {string} attrName\r\n   * @returns {EyeElement}\r\n   */\r\n  rAttr(attrName) {\r\n    if (attrName) {\r\n      this.each((elm, idx) => {\r\n        elm.removeAttribute(attrName);\r\n      })\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Super fancy class function that allows to modify class with different methods in one as follow:\r\n   *  - `\"classname\"`: add classname to the element.\r\n   *  - `\"-classname\"`: remove classname from class list.\r\n   *  - `\"%classname\"`: toggle classname existing.\r\n   *  - `\"?classname\"`: check classname existing in class list.\r\n   *  - `\"classnameA/classnameB\"`: replace classnameA by classnameB\r\n   * @method EyeElement#class\r\n   * @param {string} actions\r\n   * @returns {EyeElement|string}\r\n   */\r\n  class(actions) {\r\n    let out = undefined;\r\n    this.each((elm, idx) => {\r\n      if (typeof actions === \"number\") return out = elm.classList.item(actions);\r\n\r\n      actions.split(\" \").forEach((action) => {\r\n        if (action[0] == \"-\") {\r\n          elm.classList.remove(action.substring(1, action.length));\r\n        } else if (action[0] == \"%\") {\r\n          elm.classList.toggle(action.substring(1, action.length));\r\n        } else if (action[0] == \"?\") {\r\n          out = elm.classList.contains(action.substring(1, action.length));\r\n        } else if (action.indexOf(\"/\") != -1) {\r\n          [v1, v2] = action.split(\"/\");\r\n          elm.classList.replace(v1, v2);\r\n        } else {\r\n          elm.classList.add(action.substring(1, action.length));\r\n        }\r\n      });\r\n      if (out) return;\r\n    })\r\n\r\n    return out != undefined ? out : this;\r\n  }\r\n  /**\r\n   * Show/display the element\r\n   * @method EyeElement#show\r\n   * @param {string} cls\r\n   * @returns {EyeElement}\r\n   */\r\n  show(cls) {\r\n    this.each((elm, idx) => {\r\n      elm.style.display = cls ?? \"inline-block\";\r\n    })\r\n    return this;\r\n  }\r\n  /**\r\n   * Hide the element\r\n   * @method EyeElement#hide\r\n   * @param {boolean} opacity whether to hide by making invisible?\r\n   * @returns {EyeElement}\r\n   */\r\n  hide(opacity) {\r\n    this.each((elm, idx) => {\r\n      if (opacity) elm.style.opacity = 0;\r\n      else elm.style.display = \"none\";\r\n    })\r\n    return this;\r\n  }\r\n  /**\r\n   * Append one or more elements to the current element\r\n   * @method EyeElement#append\r\n   * @param {HTMLElement|Array<Node|EyeElement>} elm\r\n   * @param {\"next\" | \"after\" | \"previous\" | \"before\" | \"first\" | \"afterbegin\" | \"last\" | \"beforeend\"} [pos] [optional]\r\n   * @returns {EyeElement}\r\n   */\r\n  append(elm, pos) {\r\n    let nodes = [];\r\n    (Array.isArray(elm) ? elm : [elm]).forEach(item => {\r\n      if (item instanceof EyeElement) nodes.push(item.#raw);\r\n      else if (item instanceof HTMLElement) nodes.push(item)\r\n    })\r\n    if (this.#raw instanceof NodeList) {\r\n      console.warn(`[EyeJS] beware while using .append with multi selected elements`);\r\n      this.#raw.forEach((itm, idx) => {\r\n        if (!nodes[idx]) return;\r\n        itm.append(nodes[idx]);\r\n      })\r\n      return this;\r\n    }\r\n    if (!pos) this.#raw.append(...nodes);\r\n    else\r\n      switch (pos) {\r\n        case \"next\":\r\n        case \"after\":\r\n          this.#raw.after(...nodes);\r\n          break;\r\n        case \"previous\":\r\n        case \"before\":\r\n          this.#raw.before(...nodes);\r\n          break;\r\n        case \"afterbegin\":\r\n          case \"first\":\r\n            this.#raw.prepend(...nodes);\r\n            break;\r\n        case \"beforeend\":\r\n          case \"last\":\r\n            this.#raw.append(...nodes);\r\n\r\n      }\r\n    return this;\r\n  }\r\n  /**\r\n   * Insert element after this one\r\n   * @method EyeElement#after\r\n   * @param {EyeElement|HTMLElement} elm \r\n   * @returns {EyeElement}\r\n   */\r\n  after(elm) {\r\n    (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).after(elm instanceof EyeElement ? elm.raw : elm);\r\n    return this;\r\n  }\r\n  /**\r\n   * Insert element before this one\r\n   * @method EyeElement#before\r\n   * @param {EyeElement|HTMLElement} elm \r\n   * @returns {EyeElement}\r\n   */\r\n  before(elm) {\r\n    (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).before(elm instanceof EyeElement ? elm.raw : elm);\r\n    return this;\r\n  }\r\n  /**\r\n   * Replace current element with the new element, or multiple elements with multiple selected elements\r\n   * @method EyeElement#replaceWith\r\n   * @param {...HTMLElement|EyeElement} elms\r\n   * @param {string} [pos] [optional]\r\n   * @returns {EyeElement}\r\n   */\r\n  replaceWith(...elms) {\r\n    let nodes = [];\r\n    (Array.isArray(elms) ? elms : [elms]).forEach(item => {\r\n      if (item instanceof EyeElement) nodes.push(item.#raw);\r\n      else if (item instanceof HTMLElement) nodes.push(item)\r\n    })\r\n    if (this.#raw instanceof NodeList) {\r\n      [...this.#raw.entries()].forEach(([idx, elm]) => {\r\n        if (!nodes[idx]) return;\r\n        elm.replaceWith(nodes[idx]);\r\n      })\r\n    } else {\r\n      this.#raw.replaceWith(...nodes);\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Get current element parent or append it to one\r\n   * @method EyeElement#parent\r\n   * @param {HTMLElement|EyeElement} par\r\n   * @returns {EyeElement}\r\n   */\r\n  parent(par) {\r\n    if (par) {\r\n      if (!(par instanceof HTMLElement) && !(par instanceof EyeElement))\r\n        throw new Error(\r\n          \"[EyeJS] Unable to append current element to parent because it's not HTMLElement\"\r\n        );\r\n      this.each((elm, idx) => {\r\n        par.append(elm);\r\n      })\r\n      return this;\r\n    }\r\n    return e(this.#raw instanceof NodeList ? this.#raw.item(0).parentElement : this.#raw.parentElement);\r\n  }\r\n  /**\r\n   * Returns whether current node is the same/equal(depending on `check`) as the passed node or not\r\n   * @method EyeElement#is\r\n   * @param {HTMLElement|EyeElement} node\r\n   * @param {\"connected\" | \"same\" | \"equal\"} [check] check type `same`, `equal`\r\n   * @returns {boolean}\r\n   */\r\n  is(node, check) {\r\n    node = node instanceof EyeElement ? node.#raw : node;\r\n    if (this.#raw instanceof NodeList) {\r\n      console.warn(`[EyeJS] .is is not functional with multi selected elements`);\r\n      return this;\r\n    }\r\n    if (node === \"connected\") return this.#raw.isConnected;\r\n    switch (check) {\r\n      case \"same\":\r\n        return this.#raw.isSameNode(node);\r\n      case \"equal\":\r\n        return this.#raw.isEqualNode(node);\r\n      default:\r\n        console.error(\r\n          `[EyeJS] Unknown check \"${check}\", possible values are [\"same\",\"equal\",\"connected\"]`\r\n        );\r\n        return false;\r\n    }\r\n  }\r\n  /**\r\n   * Set or get a css attribute\r\n   * @method EyeElement#css\r\n   * @param {string} attr\r\n   * @param {string|number} [value]\r\n   * @returns {EyeElement|string}\r\n   */\r\n  css(attr, value) {\r\n    if (attr) {\r\n      let out = undefined;\r\n      attr = flat(attr);\r\n      this.each((elm, idx) => {\r\n        if (value === undefined) return out = elm.style[attr];\r\n        elm.style[attr] = value;\r\n      })\r\n      return out != undefined ? out : this;\r\n    } else return console.error(`[EyeJS] mission argument \"attr\" in function .css`);\r\n  }\r\n  /**\r\n   * Remove current element\r\n   * @method EyeElement#remove\r\n   * @returns {EyeElement}\r\n   */\r\n  remove() {\r\n    this.each((elm, idx) => {\r\n      elm.remove();\r\n    })\r\n    return this;\r\n  }\r\n  /**\r\n   * @overload\r\n   * @param {string} ev\r\n   * @param {function} cb\r\n   */\r\n  /**\r\n   * @overload\r\n   * @param {string} ev\r\n   * @param {string} trg optionally define a target element for the event\r\n   * @param {function} cb\r\n   *\r\n   */\r\n  /**\r\n   * Attach an listener/handler to specific event or events\r\n   * @method EyeElement#on\r\n   * @param {string} ev may contain multiple events separated by \" \"(space)\r\n   * @param {string|function} arg2 \r\n   * @param {function} [arg3]\r\n   * @returns {EyeElement|void}\r\n   */\r\n  on(ev, arg2, arg3) {\r\n    ev = ev.split(\" \");\r\n    let target = typeof arg2 === \"string\" ? arg2 : null;\r\n    let cb = typeof arg2 === \"function\" ? arg2 : arg3;\r\n    let _this = this;\r\n    if (typeof cb !== \"function\")\r\n      return console.error(\r\n        \"[EyeJS] .on method is missing the actuall callback `cb` or not of type function\"\r\n      );\r\n\r\n    let elms = (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]])\r\n\r\n    let outsider = null;\r\n    ev.forEach(evt => {\r\n      if (target) {\r\n        if (!delegationEvents.includes(evt))\r\n          return outsider = evt; // outsider events \r\n\r\n        if (!_this.#dlgListeners.has(evt))\r\n          _this.#dlgListeners.set(evt, new Set());\r\n        _this.#dlgListeners.get(evt).add({ callback: cb, target });\r\n      } else {\r\n        elms.forEach(([idx, elm]) => {\r\n          elm.addEventListener(evt, cb);\r\n        })\r\n      }\r\n    })\r\n\r\n    if (outsider !== null)\r\n      return console.error(`[EyeJS] trying to use delegation for an inappropriate event \"${outsider}\"`);\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Remove event listener of a specific event\r\n   * @method EyeElement#off\r\n   * @param {string} ev \r\n   * @param {function} cb \r\n   * @returns {EyeElement|void}\r\n   */\r\n  off(ev, cb) {\r\n    let _this = this,\r\n      listeners = _this.#dlgListeners;\r\n    if (typeof cb != \"function\")\r\n      return console.error(\r\n        \"[EyeJS] .off method is missing the actuall callback `cb` or not of type function\"\r\n      );\r\n    ev = ev.split(\" \");\r\n\r\n    this.each((elm, idx) => {\r\n      ev.forEach(evt => elm.removeEventListener(evt, cb));\r\n    })\r\n    // now delegated events\r\n    ev.forEach(evt => {\r\n      if (listeners.has(evt)) {\r\n        let set = listeners.get(evt);\r\n        for (const item of set) {\r\n          if (cb === item.callback) {\r\n            // found it & remove it\r\n            set.delete(item);\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * Trigger specific event for this element\r\n   * @method EyeElement#trigger\r\n   * @param {string} ev \r\n   * @returns {EyeElement}\r\n   */\r\n  trigger(ev) {\r\n    this.each((elm, idx) => {\r\n      elm.dispatchEvent(getEvent(ev));\r\n    })\r\n    return this;\r\n  }\r\n  /**\r\n   * Find one or multiple child elements by `selector`\r\n   * @method EyeElement#find\r\n   * @param {string} selector  \r\n   */\r\n  find(selector) {\r\n    let found = [];\r\n    this.each((elm, idx) => {\r\n      elm.querySelectorAll(selector).forEach(res => found.push(res));\r\n    })\r\n    return found.length == 1 ? found[0] : found;\r\n  }\r\n  /**\r\n   * Returns a clone of current selected element/s\r\n   * @method EyeElement#clone\r\n   * @param {HTMLElement} [parent] optionally append new clone to a parent\r\n   * @returns {Array<EyeElement>|EyeElement}\r\n   */\r\n  clone(parent) {\r\n    if (this.#raw instanceof NodeList) {\r\n      let list = [];\r\n      this.#raw.forEach(nd => {\r\n        list.push(nd.cloneNode(true));\r\n      })\r\n      if (parent instanceof HTMLElement || parent instanceof EyeElement) list.forEach(el => parent.append(el));\r\n      return list;\r\n    } else {\r\n      let clone = this.#raw.cloneNode(true);\r\n      if (parent instanceof HTMLElement || parent instanceof EyeElement) parent.append(clone);\r\n      return clone;\r\n    }\r\n  }\r\n  /**\r\n   * Compute DOMRect or style declaration of current element\r\n   * @method EyeElement#compute\r\n   * @param {\"bounds\" | \"style\"} type \r\n   * @returns {DOMRect|CSSStyleDeclaration}\r\n   */\r\n  compute(type) {\r\n    type = type || \"bounds\";\r\n    if (type === \"bounds\")\r\n      return (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw).getBoundingClientRect();\r\n    else if (type == \"style\")\r\n      return getComputedStyle(this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw)\r\n    console.error(`[EyeJS] unkown type \"${type}\" in function .compute, possible values are \"bounds\" \"style\"`);\r\n  }\r\n\r\n  /**\r\n   * Get specific client informations.\r\n   * @param {\"width\" | \"height\" | \"left\" | \"top\"} attr \r\n   * @returns {EyeElement}\r\n   */\r\n  client(attr) {\r\n    if (['width', 'height', 'left', 'top'].includes(attr))\r\n      return (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw)[`client${attr[0].toUpperCase()}${attr.substring(1, attr.length)}`];\r\n    else console.error(`[EyeJS] Unknown client* attribute \"${attr}\" in .client(attr)`);\r\n    return this;\r\n  }\r\n  /**\r\n   * Activate/disactive different pointer features such as PointerLock, pointerCapture...\r\n   * @method EyeElement#pointer\r\n   * @param {\"capture\" | \"lock\"} action \r\n   * @param {boolean} status \r\n   * @param {string} [pid]  \r\n   * @returns {EyeElement}\r\n   */\r\n  pointer(action, status, pid) {\r\n    this.each((elm, idx) => {\r\n      if (action === \"capture\") {\r\n        if (status === true) elm.setPointerCapture(pid);\r\n        else elm.releasePointerCapture(pid);\r\n      } else if (action === \"lock\") {\r\n        if (status === true) elm.requestPointerLock();\r\n        else document.exitPointerLock();\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n  /**\r\n   * Returns the count of children for this element\r\n   * @type {number}\r\n   */\r\n  get childlen() {\r\n    return (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw)?.children.length;\r\n  }\r\n  /**\r\n   * Select a child of this element\r\n   * @method EyeElement#child\r\n   * @param {number} index \r\n   * @returns {EyeElement|null}\r\n   */\r\n  child(index) {\r\n    let it = (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw);\r\n    if (index === undefined) return it.children.length;\r\n    if (it.children[index]) return e(it.children[index]);\r\n    return null;\r\n  }\r\n  /**\r\n   * Set/get the value of the current element\r\n   * @method EyeElement#val\r\n   * @param {*} value \r\n   * @returns \r\n   */\r\n  val(value) {\r\n    if (value != undefined) (this.#raw instanceof NodeList ? [...this.#raw.entries()] : [[0, this.#raw]]).forEach(([idx, a]) => a.value = this.#customSet.value(\"set\", value, a));\r\n    else {\r\n      let it = (this.#raw instanceof NodeList ? this.#raw.item(0) : this.#raw);\r\n      return this.#customSet.value(\"get\", it.value, it);\r\n    }\r\n    return this;\r\n  }\r\n  /**\r\n   * Serialize this element to send it over network, returns 3 formats `json`, `url` & `fd`(formData) \r\n   * @method EyeElement#serialize\r\n   * @param {{inputs: Array<string>}} opts\r\n   * @returns {{json: Object, url: String, fd: FormData}}\r\n   */\r\n  serialize(opts) {\r\n    opts = opts || {};\r\n    let {\r\n      inputs = [\"input\", \"textarea\", \"select\"],\r\n    } = opts;\r\n    if (this.#raw instanceof HTMLElement) {\r\n      let out = {\r\n        json: {},\r\n        url: \"\",\r\n        fd: new FormData()\r\n      };\r\n      this.#raw.querySelectorAll(inputs.join(','))\r\n        .forEach((inp, i) => {\r\n          let name = inp.name || inp.dataset.name;\r\n          let value = inp.value || inp.textContent;\r\n          if (typeof opts[name] === \"function\") value = opts[name](inp);\r\n\r\n          if (inp.type == \"file\")\r\n            inp.files.forEach(file => {\r\n              out.fd.append(name, file);\r\n            })\r\n          else {\r\n            out.json[name] = value;\r\n            out.fd.append(name, value);\r\n          }\r\n        })\r\n\r\n      out.url = new URLSearchParams(out.json).toString();\r\n      return out;\r\n    } else console.warn(`[EyeJS] this is a multi selection, it's not serializable!`);\r\n  }\r\n  /**\r\n   * Redefine the way `.text` or `.val` set or get data to and from this element.\r\n   * @method EyeElement#redefine\r\n   * @param {\"text\" | \"value\"} type \r\n   * @param {(action: \"set\" | \"get\", value: *, elm: EyeElement) => *} process \r\n   * @returns {EyeElement}\r\n   */\r\n  redefine(type, process) {\r\n    if ([\"text\", \"value\"].includes(type) && typeof process == \"function\")\r\n      this.#customSet[type] = process;\r\n    return this;\r\n  }\r\n  /**\r\n   * Animate current object \r\n   * @method EyeElement#animate\r\n   * @param {Array<Keyframe>} keyframes \r\n   * @param {KeyframeAnimationOptions} opts \r\n   * @returns {Array<Animation>|Animation}\r\n   */\r\n  animate(keyframes, opts) {\r\n    /**\r\n     * @type {Array<Animation>}\r\n     */\r\n    let anmts = [];\r\n    opts.duration = opts.duration || 1000;\r\n    this.each((elm, i) => {\r\n      anmts.push(elm.animate(keyframes, opts));\r\n    })\r\n    return anmts.length == 1 ? anmts[0] : anmts;\r\n  }\r\n};\r\n\r\n/**\r\n * Creates or select nodes using css selectors, offering a pack of useful functions to use around your code!\r\n * @param {String} tag\r\n * @param {AttrMap} attrs\r\n * @param {Object} css CSS styles to be applied to the element.\r\n * @returns {EyeElement}\r\n */\r\nfunction e(tag, attrs, css) {\r\n  if (typeof tag === \"string\" && tag.indexOf(\"model:\") === 0 || tag === \"model\") {\r\n    if (!attrs) return console.error(\"[EyeJS] Model creation requires parameter 'attr' as prototype, none delivered!\");\r\n\r\n    tag = tag.split(\":\");\r\n    let cls = [\"eye-model\"];\r\n    if (tag[1])\r\n      cls = cls.concat(tag[1].split(\" \").filter(a => a != \"\"));\r\n    // creating a model\r\n    let model = e(\"<div>\", {\r\n      class: cls.join(\" \"),\r\n    });\r\n\r\n    let sets = cmcl(model, attrs);\r\n\r\n    /**\r\n     * @param {string} attrs\r\n     * @returns {ModelEyeElement}\r\n     */\r\n    return (attrs) => {\r\n      let copy = e(model.clone(attrs?.parent));\r\n      // define & attach the refresh function\r\n      copy.refresh = function (attrs = {}) {\r\n        let def = attrs.default === false ? false : true;\r\n        sets.forEach((item) => {\r\n          if (def === true || (!def && attrs.hasOwnProperty(item.name)))\r\n            item.set(copy, attrs[item.name]);\r\n        });\r\n        return this;\r\n      };\r\n      return copy.refresh(attrs);\r\n    };\r\n  } else return new EyeElement(tag, attrs, css);\r\n}\r\n\r\n\r\n// gloablly exposed\r\nwindow.e = e;\r\nwindow.EyeElement = EyeElement;\r\nexport default e;\r\n"],"names":["events","htmlElements","flat","word","n","i","length","t","toUpperCase","toLowerCase","localdata","WeakMap","cmcl","parent","layer","obj","key","subcontent","def","_set","split","tagName","cls","_set_name","_set_default","map","a","trim","elm","e","class","data","value","undefined","push","name","set","find","textContent","Array","concat","delegationEvents","normalSetterGetter","action","v","EyeElement","raw","dlgListeners","Map","customSet","text","constructor","selector","attrs","css","_this","this","HTMLElement","includes","document","createElement","substring","s","slice","querySelectorAll","item","handler","type","listeners","_etarget","target","me","has","cbs","get","forEach","callback","closest","each","idx","parentElm","classList","add","apply","filter","innerHTML","k","dataset","setAttribute","indexOf","style","append","ev","addEventListener","cb","on","trigger","NodeList","entries","html","out","attr","val","getAttribute","rAttr","attrName","removeAttribute","actions","remove","toggle","contains","v1","v2","replace","show","display","hide","opacity","pos","nodes","isArray","console","warn","itm","after","before","prepend","replaceWith","elms","par","Error","parentElement","is","node","check","isConnected","isSameNode","isEqualNode","error","arg2","arg3","outsider","evt","Set","off","removeEventListener","delete","dispatchEvent","options","MouseEvent","PointerEvent","KeyboardEvent","FocusEvent","Event","WheelEvent","ClipboardEvent","UIEvent","CustomEvent","getEvent","found","res","clone","list","nd","cloneNode","el","compute","getBoundingClientRect","getComputedStyle","client","pointer","status","pid","setPointerCapture","releasePointerCapture","requestPointerLock","exitPointerLock","childlen","children","child","index","it","serialize","opts","inputs","json","url","fd","FormData","join","inp","files","file","URLSearchParams","toString","redefine","process","animate","keyframes","anmts","duration","tag","model","sets","copy","refresh","default","hasOwnProperty","window"],"mappings":"2OAsFA,MAAMA,EAAS,CAEb,QACA,WACA,YACA,UACA,YACA,aACA,aACA,YACA,WACA,cAGA,UACA,WACA,QAGA,QACA,OACA,UACA,WAGA,SACA,SACA,QACA,QACA,SAGA,aACA,WACA,YACA,cAGA,cACA,YACA,cACA,eACA,eACA,gBAGA,YACA,UACA,YACA,WACA,YACA,OAGA,SACA,SACA,OACA,eACA,SAGA,OACA,QACA,QACA,eACA,aAGA,OACA,MACA,QAGA,iBACA,eACA,qBACA,kBACA,gBAGA,qBACA,kBACA,iBAGA,QACA,aACA,YAGIC,EAAe,CAEnB,SACA,SACA,SACA,SACA,UACA,UAGA,SACA,YACA,YACA,UACA,WACA,WACA,OACA,OACA,OACA,OACA,OACA,OACA,SACA,QACA,YAGA,eACA,OACA,QACA,OACA,OACA,eACA,WACA,OACA,OACA,OACA,MACA,QACA,OAGA,MACA,SACA,MACA,QACA,QACA,OACA,SACA,SACA,SACA,QACA,OACA,MACA,QACA,SACA,MACA,OACA,OACA,SACA,MACA,SACA,UACA,SACA,WACA,QACA,QACA,SACA,MACA,QACA,QAGA,SACA,UACA,QACA,QACA,UACA,UAGA,UACA,WACA,WACA,YACA,WACA,WAGA,WACA,aACA,WAGA,QACA,QAGA,YACA,QACA,aACA,UACA,UACA,OACA,UACA,OACA,UACA,OAGA,WACA,aACA,aACA,SACA,UACA,UACA,WACA,UACA,aACA,WACA,WACA,aACA,WACA,aAGA,YACA,WACA,YAGA,SACA,cAGF,SAASC,EAAKC,GACZ,IAAIC,EAAI,GACR,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,MAAME,EAAIJ,EAAKE,GACXE,IAAMA,EAAEC,eAAiBD,IAAMA,EAAEE,cAAeL,GAAK,IAAMG,EAC1DH,GAAKG,CACX,CACD,OAAOH,EAAEK,aACX,CAEA,MAAMC,EAAY,IAAIC,QAQtB,SAASC,EAAKC,EAAQC,GACpB,IAAIC,EAAM,GACV,IAAK,MAAMC,KAAOF,EAAO,CACvB,MAAMG,EAAa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"}